rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Only authenticated users can read/write their own user data, but cannot change their own admin status
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId && !("admin" in request.resource.data);
      allow update: if request.auth != null && request.auth.uid == userId && !("admin" in request.resource.data.diff(resource.data));
      // Special rule for updating only premadeProgress field
      allow update: if request.auth != null && request.auth.uid == userId && 
                    request.resource.data.diff(resource.data).affectedKeys().hasOnly(['premadeProgress']);
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    // Each user can only read/write/update/delete their own premadeProgress documents
    // Added constraint to ensure userId_fullPuzzleId combination is unique
    match /premadeProgress/{progressId} {
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
                    request.resource.data.userId == request.auth.uid && 
                    (
                      // Either the document ID must follow our naming convention
                      progressId == request.resource.data.userId + "_" + request.resource.data.fullPuzzleId ||
                      // Or we need to ensure there's no existing document with the same userId and fullPuzzleId
                      !exists(/databases/$(database)/documents/premadeProgress/$(request.resource.data.userId + "_" + request.resource.data.fullPuzzleId)) &&
                      !existsAfter(/databases/$(database)/documents/premadeProgress/$(request.resource.data.userId + "_" + request.resource.data.fullPuzzleId))
                    );
    }
    // Anyone authenticated can read word sets, but only admins can write
    match /wordSets/{setId} {
      allow read: if request.auth != null;
      allow write, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }
    // All logged in users can read all fullPuzzles; only admins can write/update/delete
    match /fullPuzzles/{docId} {
      allow read: if request.auth != null;
      allow write, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }
  }
}